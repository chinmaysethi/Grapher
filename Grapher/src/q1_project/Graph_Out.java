/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package q1_project;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import static java.util.Collections.list;
import java.util.Comparator;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.Control;
import javax.sound.sampled.Line;
import javax.sound.sampled.LineListener;
import javax.sound.sampled.LineUnavailableException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.filechooser.*;

/**
 *
 * @author chinmay
 */
public class Graph_Out extends javax.swing.JFrame implements ActionListener, MouseListener,MouseMotionListener{

    /**
     * Creates new form Graph_Out
     */
    Graph map=new Graph();
    HashMap<String,Vertex> vert=new HashMap();
    HashMap<String,Edge> edg=new HashMap(); 
    Vertex search;
    Timer t;
    public Graph_Out() {
        initComponents();
        this.addMouseListener(this);
        this.addMouseMotionListener(this);
        t= new Timer(100,this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        VertexPanel = new javax.swing.JPanel();
        vertex_label1 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        x_label = new javax.swing.JLabel();
        x_textAddVertex = new javax.swing.JTextField();
        y_label = new javax.swing.JLabel();
        y_textAddVertex = new javax.swing.JTextField();
        name_label = new javax.swing.JLabel();
        name_text_addVertex = new javax.swing.JTextField();
        addVertex = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        name_label1 = new javax.swing.JLabel();
        name_text_SearchVertex = new javax.swing.JTextField();
        searchVertex = new javax.swing.JButton();
        x_label1 = new javax.swing.JLabel();
        x_textSearchVertex = new javax.swing.JTextField();
        y_label1 = new javax.swing.JLabel();
        y_textSearchVertex = new javax.swing.JTextField();
        jPanel15 = new javax.swing.JPanel();
        name_label2 = new javax.swing.JLabel();
        name_text_deleteVertex = new javax.swing.JTextField();
        deleteVertex = new javax.swing.JButton();
        x_label2 = new javax.swing.JLabel();
        x_textDeleteVertex = new javax.swing.JTextField();
        y_label2 = new javax.swing.JLabel();
        y_textDeleteVertex = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        name_label3 = new javax.swing.JLabel();
        name_text_modifyVertex = new javax.swing.JTextField();
        x_label7 = new javax.swing.JLabel();
        x_textModifyVertex = new javax.swing.JTextField();
        y_label7 = new javax.swing.JLabel();
        y_textModifyVertex = new javax.swing.JTextField();
        modifyVertex = new javax.swing.JButton();
        EdgePanel = new javax.swing.JPanel();
        edge_label1 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        name_label4 = new javax.swing.JLabel();
        searchEdge = new javax.swing.JButton();
        from_label1 = new javax.swing.JLabel();
        from_textSearchEdge = new javax.swing.JTextField();
        to_label1 = new javax.swing.JLabel();
        to_textSearchEdge = new javax.swing.JTextField();
        name_text_SearchEdge = new javax.swing.JTextField();
        weight_label1 = new javax.swing.JLabel();
        weigth_textSearchEdge = new javax.swing.JTextField();
        jPanel20 = new javax.swing.JPanel();
        from_label = new javax.swing.JLabel();
        from_textAddEdge = new javax.swing.JTextField();
        to_label = new javax.swing.JLabel();
        to_textAddEdge = new javax.swing.JTextField();
        weight_label = new javax.swing.JLabel();
        weigth_textAddEdge = new javax.swing.JTextField();
        addEdge = new javax.swing.JButton();
        name_label7 = new javax.swing.JLabel();
        name_text_AddEdge = new javax.swing.JTextField();
        jPanel21 = new javax.swing.JPanel();
        name_label5 = new javax.swing.JLabel();
        name_text_DeleteEdge = new javax.swing.JTextField();
        from_label2 = new javax.swing.JLabel();
        from_textDeleteEdge1 = new javax.swing.JTextField();
        to_label2 = new javax.swing.JLabel();
        deleteEdge = new javax.swing.JButton();
        to_textDeleteEdge = new javax.swing.JTextField();
        weight_label2 = new javax.swing.JLabel();
        weigth_textDeleteEdge = new javax.swing.JTextField();
        jPanel22 = new javax.swing.JPanel();
        name_label6 = new javax.swing.JLabel();
        name_text_ModifyEdge = new javax.swing.JTextField();
        modifyEdge = new javax.swing.JButton();
        weight_label3 = new javax.swing.JLabel();
        weigth_textModifyEdge = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        FunctonPanel = new javax.swing.JPanel();
        importFileSystem = new javax.swing.JButton();
        exportFile = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        PathFrom = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        PathTo = new javax.swing.JTextField();
        pathFinder = new javax.swing.JButton();
        PathOutput = new javax.swing.JTextField();
        MODE = new javax.swing.JLabel();
        vMode = new javax.swing.JRadioButton();
        eMode = new javax.swing.JRadioButton();
        Refresh = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(java.awt.Color.white);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(java.awt.Color.lightGray);

        VertexPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));

        vertex_label1.setText("                                                Vertex");

        x_label.setText("X");

        x_textAddVertex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x_textAddVertexActionPerformed(evt);
            }
        });

        y_label.setText("Y");

        y_textAddVertex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y_textAddVertexActionPerformed(evt);
            }
        });

        name_label.setText("Name");

        name_text_addVertex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_text_addVertexActionPerformed(evt);
            }
        });

        addVertex.setText("Add Vertex");
        addVertex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addVertexActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(x_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(x_textAddVertex, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(y_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(y_textAddVertex, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(name_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(name_text_addVertex, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addVertex, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(x_label, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(x_textAddVertex, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(y_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(y_textAddVertex)
                    .addComponent(name_label)
                    .addComponent(name_text_addVertex)
                    .addComponent(addVertex, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        name_label1.setText("Name");

        name_text_SearchVertex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_text_SearchVertexActionPerformed(evt);
            }
        });

        searchVertex.setText("Search Vertex");
        searchVertex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchVertexActionPerformed(evt);
            }
        });

        x_label1.setText("X");

        x_textSearchVertex.setEditable(false);
        x_textSearchVertex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x_textSearchVertexActionPerformed(evt);
            }
        });

        y_label1.setText("Y");

        y_textSearchVertex.setEditable(false);
        y_textSearchVertex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y_textSearchVertexActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(name_label1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(name_text_SearchVertex, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchVertex, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(x_label1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(x_textSearchVertex, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(y_label1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(y_textSearchVertex, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(searchVertex)
                .addComponent(x_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(x_textSearchVertex, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(y_label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(name_text_SearchVertex, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(y_textSearchVertex))
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(name_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        name_label2.setText("Name");

        name_text_deleteVertex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_text_deleteVertexActionPerformed(evt);
            }
        });

        deleteVertex.setText("Delete Vertex");
        deleteVertex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteVertexActionPerformed(evt);
            }
        });

        x_label2.setText("X");

        x_textDeleteVertex.setEditable(false);
        x_textDeleteVertex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x_textDeleteVertexActionPerformed(evt);
            }
        });

        y_label2.setText("Y");

        y_textDeleteVertex.setEditable(false);
        y_textDeleteVertex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y_textDeleteVertexActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(name_label2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(name_text_deleteVertex, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteVertex, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(x_label2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(x_textDeleteVertex, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(y_label2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(y_textDeleteVertex, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(name_label2)
            .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(y_textDeleteVertex)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name_text_deleteVertex, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteVertex)
                    .addComponent(x_label2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(x_textDeleteVertex, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(y_label2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        name_label3.setText("Name");

        name_text_modifyVertex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_text_modifyVertexActionPerformed(evt);
            }
        });

        x_label7.setText("X");

        x_textModifyVertex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x_textModifyVertexActionPerformed(evt);
            }
        });

        y_label7.setText("Y");

        y_textModifyVertex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y_textModifyVertexActionPerformed(evt);
            }
        });

        modifyVertex.setText("Modify Vertex");
        modifyVertex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyVertexActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(name_label3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(name_text_modifyVertex, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(x_label7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(x_textModifyVertex, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(y_label7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(y_textModifyVertex, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(modifyVertex))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(name_label3)
                .addComponent(name_text_modifyVertex, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(x_label7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(x_textModifyVertex, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(y_label7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(y_textModifyVertex, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(modifyVertex))
        );

        javax.swing.GroupLayout VertexPanelLayout = new javax.swing.GroupLayout(VertexPanel);
        VertexPanel.setLayout(VertexPanelLayout);
        VertexPanelLayout.setHorizontalGroup(
            VertexPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(vertex_label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VertexPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(VertexPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addComponent(jPanel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(VertexPanelLayout.createSequentialGroup()
                .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        VertexPanelLayout.setVerticalGroup(
            VertexPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VertexPanelLayout.createSequentialGroup()
                .addComponent(vertex_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
        );

        EdgePanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));

        edge_label1.setText("                                                         Edge");

        name_label4.setText("Name");

        searchEdge.setText("Search Edge");
        searchEdge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchEdgeActionPerformed(evt);
            }
        });

        from_label1.setText("From");

        from_textSearchEdge.setEditable(false);
        from_textSearchEdge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                from_textSearchEdgeActionPerformed(evt);
            }
        });

        to_label1.setText("To");

        to_textSearchEdge.setEditable(false);
        to_textSearchEdge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                to_textSearchEdgeActionPerformed(evt);
            }
        });

        name_text_SearchEdge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_text_SearchEdgeActionPerformed(evt);
            }
        });

        weight_label1.setText("Weight");

        weigth_textSearchEdge.setEditable(false);

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addComponent(name_label4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(name_text_SearchEdge, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchEdge, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(from_label1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(from_textSearchEdge, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(to_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(to_textSearchEdge, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(weight_label1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(weigth_textSearchEdge, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(from_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(from_textSearchEdge, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(to_label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(to_textSearchEdge, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(weight_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(weigth_textSearchEdge))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(name_label4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(searchEdge)
                .addComponent(name_text_SearchEdge, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        from_label.setText("From");

        from_textAddEdge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                from_textAddEdgeActionPerformed(evt);
            }
        });

        to_label.setText("To");

        to_textAddEdge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                to_textAddEdgeActionPerformed(evt);
            }
        });

        weight_label.setText("Weight");

        addEdge.setText("Add Edge");
        addEdge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEdgeActionPerformed(evt);
            }
        });

        name_label7.setText("Name");

        name_text_AddEdge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_text_AddEdgeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addComponent(from_label, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(from_textAddEdge, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(to_label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(to_textAddEdge, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(name_label7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(name_text_AddEdge, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(weight_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(weigth_textAddEdge, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addEdge, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(from_textAddEdge, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(to_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(to_textAddEdge, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(weight_label, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(weigth_textAddEdge)
                .addComponent(addEdge)
                .addComponent(from_label)
                .addComponent(name_label7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(name_text_AddEdge, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        name_label5.setText("Name");

        name_text_DeleteEdge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_text_DeleteEdgeActionPerformed(evt);
            }
        });

        from_label2.setText("From");

        from_textDeleteEdge1.setEditable(false);
        from_textDeleteEdge1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                from_textDeleteEdge1ActionPerformed(evt);
            }
        });

        to_label2.setText("To");

        deleteEdge.setText("Delete Edge");
        deleteEdge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteEdgeActionPerformed(evt);
            }
        });

        to_textDeleteEdge.setEditable(false);
        to_textDeleteEdge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                to_textDeleteEdgeActionPerformed(evt);
            }
        });

        weight_label2.setText("Weight");

        weigth_textDeleteEdge.setEditable(false);

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addComponent(name_label5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(name_text_DeleteEdge, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deleteEdge)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(from_label2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(from_textDeleteEdge1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(to_label2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(to_textDeleteEdge, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(weight_label2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(weigth_textDeleteEdge, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(name_label5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(name_text_DeleteEdge, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(from_label2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(from_textDeleteEdge1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(to_label2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(deleteEdge)
                .addComponent(to_textDeleteEdge, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(weight_label2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(weigth_textDeleteEdge))
        );

        name_label6.setText("Name");

        name_text_ModifyEdge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_text_ModifyEdgeActionPerformed(evt);
            }
        });

        modifyEdge.setText("Modify Edge");
        modifyEdge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyEdgeActionPerformed(evt);
            }
        });

        weight_label3.setText("Weight");

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addComponent(name_label6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(name_text_ModifyEdge, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(weight_label3)
                .addGap(18, 18, 18)
                .addComponent(weigth_textModifyEdge, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(modifyEdge)
                .addGap(201, 201, 201))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(name_label6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(name_text_ModifyEdge, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(modifyEdge)
                .addComponent(weight_label3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(weigth_textModifyEdge))
        );

        javax.swing.GroupLayout EdgePanelLayout = new javax.swing.GroupLayout(EdgePanel);
        EdgePanel.setLayout(EdgePanelLayout);
        EdgePanelLayout.setHorizontalGroup(
            EdgePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(edge_label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(EdgePanelLayout.createSequentialGroup()
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(EdgePanelLayout.createSequentialGroup()
                .addGroup(EdgePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EdgePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel18, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        EdgePanelLayout.setVerticalGroup(
            EdgePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EdgePanelLayout.createSequentialGroup()
                .addComponent(edge_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1077, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 437, Short.MAX_VALUE)
        );

        FunctonPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));

        importFileSystem.setText("IMPORT");
        importFileSystem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importFileSystemActionPerformed(evt);
            }
        });

        exportFile.setText("EXPORT");
        exportFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportFileActionPerformed(evt);
            }
        });

        jLabel1.setText("FROM");

        PathFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PathFromActionPerformed(evt);
            }
        });

        jLabel2.setText("TO");

        PathTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PathToActionPerformed(evt);
            }
        });

        pathFinder.setText("FIND PATH");
        pathFinder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pathFinderActionPerformed(evt);
            }
        });

        MODE.setText("SELECT MODE");

        buttonGroup1.add(vMode);
        vMode.setText("VERTEX");
        vMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vModeActionPerformed(evt);
            }
        });

        buttonGroup1.add(eMode);
        eMode.setText("EDGE");
        eMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eModeActionPerformed(evt);
            }
        });

        Refresh.setText("REFRESH");
        Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FunctonPanelLayout = new javax.swing.GroupLayout(FunctonPanel);
        FunctonPanel.setLayout(FunctonPanelLayout);
        FunctonPanelLayout.setHorizontalGroup(
            FunctonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FunctonPanelLayout.createSequentialGroup()
                .addGroup(FunctonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, FunctonPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PathFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(importFileSystem, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FunctonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(exportFile, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(FunctonPanelLayout.createSequentialGroup()
                        .addComponent(PathTo, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pathFinder, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 16, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FunctonPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Refresh))
            .addComponent(PathOutput, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(FunctonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MODE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(vMode)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eMode)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        FunctonPanelLayout.setVerticalGroup(
            FunctonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FunctonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FunctonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(importFileSystem)
                    .addComponent(exportFile))
                .addGap(29, 29, 29)
                .addGroup(FunctonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FunctonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(PathFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FunctonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(PathTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pathFinder)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PathOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(FunctonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MODE, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vMode)
                    .addComponent(eMode))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Refresh))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(VertexPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EdgePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FunctonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(EdgePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(VertexPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(FunctonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(22, 22, 22)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(136, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void x_textAddVertexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x_textAddVertexActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_x_textAddVertexActionPerformed

    private void y_textAddVertexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y_textAddVertexActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_y_textAddVertexActionPerformed

    private void name_text_addVertexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_text_addVertexActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_name_text_addVertexActionPerformed

    private void addVertexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addVertexActionPerformed
        // TODO add your handling code here:
        int x,y;
        try{
            if(x_textAddVertex==null||y_textAddVertex==null)
            throw new NullPointerException();
        }
        catch(NullPointerException e)
        {
            JOptionPane.showMessageDialog(null, "PLEASE NETR VALID ENTRIES");
            return;
        }
        try{
        x=Integer.parseInt(x_textAddVertex.getText());
        y=Integer.parseInt(y_textAddVertex.getText());
        }
        catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(null, "PLEASE NETR VALID ENTRIES");
            return;
        }
        String name=name_text_addVertex.getText();
        try{
            if(name==null)
            throw new NullPointerException();
        }
        catch(NullPointerException e)
        {
            JOptionPane.showMessageDialog(null, "NO SUCH VERTEX");
            return;
        }
        Vertex v=new Vertex(x,y,x,y,name);
        map.addVertex(v);
        x_textAddVertex.setText("");
        y_textAddVertex.setText("");
        name_text_addVertex.setText("");
        JOptionPane.showMessageDialog(this,name+" VERTEX ADDED");
        repaint();
    }//GEN-LAST:event_addVertexActionPerformed

    private void name_text_SearchVertexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_text_SearchVertexActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_name_text_SearchVertexActionPerformed

    private void searchVertexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchVertexActionPerformed
        // TODO add your handling code here:
        Vertex v=null;
        try{
        v=map.searchVertex(name_text_SearchVertex.getText());
        }
        catch(NullPointerException e)
        {
            JOptionPane.showMessageDialog(this,"No Vertex Of "+name_text_SearchVertex.getText());
        }
        y_textSearchVertex.setEditable(true);
        x_textSearchVertex.setEditable(true);
        {
            x_textSearchVertex.setText(v.showx+"");
            y_textSearchVertex.setText(v.showy+"");
        }
        x_textSearchVertex.setEditable(false);
        y_textSearchVertex.setEditable(false);
        name_text_SearchVertex.setText("");
    }//GEN-LAST:event_searchVertexActionPerformed

    private void x_textSearchVertexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x_textSearchVertexActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_x_textSearchVertexActionPerformed

    private void y_textSearchVertexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y_textSearchVertexActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_y_textSearchVertexActionPerformed

    private void name_text_deleteVertexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_text_deleteVertexActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_name_text_deleteVertexActionPerformed

    private void x_textDeleteVertexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x_textDeleteVertexActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_x_textDeleteVertexActionPerformed

    private void y_textDeleteVertexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y_textDeleteVertexActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_y_textDeleteVertexActionPerformed

    private void name_text_modifyVertexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_text_modifyVertexActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_name_text_modifyVertexActionPerformed

    private void modifyVertexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyVertexActionPerformed
        // TODO add your handling code here:
        int x,y;
        try{
        x=Integer.parseInt(x_textModifyVertex.getText());
        y=Integer.parseInt(y_textModifyVertex.getText());
        }
        catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(null, "PLEASE NETR VALID ENTRIES");
            return;
        }
        String name=name_text_modifyVertex.getText();
        Vertex v=vert.get(name);
       // System.out.println(v.name);
        v.x=x;
        v.y=y;
        repaint();
    }//GEN-LAST:event_modifyVertexActionPerformed

    private void x_textModifyVertexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x_textModifyVertexActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_x_textModifyVertexActionPerformed

    private void y_textModifyVertexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y_textModifyVertexActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_y_textModifyVertexActionPerformed

    private void name_text_AddEdgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_text_AddEdgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_name_text_AddEdgeActionPerformed

    private void searchEdgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchEdgeActionPerformed
        // TODO add your handling code here:
        Edge e=map.searchEdge(name_text_SearchEdge.getText());
        from_textSearchEdge.setEditable(true);
        to_textSearchEdge.setEditable(true);
        weigth_textSearchEdge.setEditable(true);
        if(e==null)
            JOptionPane.showMessageDialog(this,"No Edge Of "+name_text_SearchEdge.getText());
        else
        {
            from_textSearchEdge.setText(e.from.name+"");
            to_textSearchEdge.setText(e.to.name+"");
            weigth_textSearchEdge.setText(e.weight+"");
        }
        name_text_SearchEdge.setText("");
        from_textSearchEdge.setEditable(false);
        to_textSearchEdge.setEditable(false);
        weigth_textSearchEdge.setEditable(false);
    }//GEN-LAST:event_searchEdgeActionPerformed

    private void from_textSearchEdgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_from_textSearchEdgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_from_textSearchEdgeActionPerformed

    private void to_textSearchEdgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_to_textSearchEdgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_to_textSearchEdgeActionPerformed

    private void from_textAddEdgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_from_textAddEdgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_from_textAddEdgeActionPerformed

    private void to_textAddEdgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_to_textAddEdgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_to_textAddEdgeActionPerformed

    private void name_text_DeleteEdgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_text_DeleteEdgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_name_text_DeleteEdgeActionPerformed

    private void from_textDeleteEdge1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_from_textDeleteEdge1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_from_textDeleteEdge1ActionPerformed

    private void deleteEdgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteEdgeActionPerformed
        // TODO add your handling code here:
        String name=name_text_DeleteEdge.getText();
        Edge e=edg.get(name);
        if(e==null)
        {
           JOptionPane.showMessageDialog(this, "NO SUCH VERTEX");
           return;
        }
        else
        {
            from_textSearchEdge.setText(e.from.name+"");
            to_textSearchEdge.setText(e.to.name+"");
            weigth_textSearchEdge.setText(e.weight+"");
            map.deleteEdge(name);
            repaint();
        }
    }//GEN-LAST:event_deleteEdgeActionPerformed

    private void to_textDeleteEdgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_to_textDeleteEdgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_to_textDeleteEdgeActionPerformed

    private void name_text_ModifyEdgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_text_ModifyEdgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_name_text_ModifyEdgeActionPerformed

    private void modifyEdgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyEdgeActionPerformed
        // TODO add your handling code here:
        String name=name_text_ModifyEdge.getText();
        Edge e=edg.get(name);
        e.weight=Integer.parseInt(weigth_textModifyEdge.getText());
        JOptionPane.showMessageDialog(this, "EDGE "+e.name+" Weight Modified to "+e.weight);
    }//GEN-LAST:event_modifyEdgeActionPerformed

    private void addEdgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEdgeActionPerformed
        // TODO add your handling code here:
        String from=from_textAddEdge.getText();
        String to=to_textAddEdge.getText();
        String name=name_text_AddEdge.getText();
        try
        {
            if(from==null||to==null||name==null)
               throw new NullPointerException();
        }
        catch(NullPointerException e)
        {
                    JOptionPane.showMessageDialog(this, "ENTER VALID OUTPUT");
        }
        int weight=Integer.parseInt(weigth_textAddEdge.getText());
        map.addEdge(from,to,name,weight);
        JOptionPane.showMessageDialog(this,name+" EDGE ADDED");
        repaint();
    }//GEN-LAST:event_addEdgeActionPerformed

    private void deleteVertexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteVertexActionPerformed
        // TODO add your handling code here:
        String name=name_text_deleteVertex.getText();
        Vertex v=vert.get(name);
        if(v==null)
        {
            JOptionPane.showMessageDialog(null, "PLEASE NETR VALID ENTRIES");
            return;
        }
        x_textDeleteVertex.setText(v.x+"");
        y_textDeleteVertex.setText(v.y+"");
        JOptionPane.showMessageDialog(this, name+" VERTEX DELETED");
        map.deleteVertex(name);
        repaint();
    }//GEN-LAST:event_deleteVertexActionPerformed

    private void name_text_SearchEdgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_text_SearchEdgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_name_text_SearchEdgeActionPerformed

    private void RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshActionPerformed

        // TODO add your handling code here:
        repaint();
    }//GEN-LAST:event_RefreshActionPerformed

    private void importFileSystemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importFileSystemActionPerformed
        // TODO add your handling code here:
        JFileChooser chfile=new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        chfile.setAcceptAllFileFilterUsed(false);
        chfile.setDialogTitle("SELECT INPUT FILE");
        
        FileNameExtensionFilter ext=new FileNameExtensionFilter(".txt FILES ONLY","txt");
        chfile.addChoosableFileFilter(ext);
        chfile.showOpenDialog(null);
        String path=chfile.getSelectedFile().getAbsolutePath();
        if(path==null){
            JOptionPane.showMessageDialog(null, "PATH NOT FOUND");
            return;
        }
        File fileinput=new File(path);
         
        try {
            Scanner sc=new Scanner(fileinput);
            int vn=sc.nextInt();
            while(vn>0)
            {
                String name=sc.next();
                int x=sc.nextInt()/2;
                int y=sc.nextInt()/2;
                int shx=2*x;
                int shy=2*y;
                Vertex v=new Vertex(x,y,shx,shy,name);
                map.addVertex(v);
                vn--;
            }
            int en=sc.nextInt();
            while(en>0)
            {
                String from=sc.next();
                String to=sc.next();
                String name=to+from;
                int weight=sc.nextInt();
                map.addEdge(from,to,name,weight);
                en--;
            } 
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Graph_Out.class.getName()).log(Level.SEVERE, null, ex);
        }
        repaint();
        
    }//GEN-LAST:event_importFileSystemActionPerformed

    private void exportFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportFileActionPerformed
        // TODO add your handling code here:
        JFileChooser chfile=new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        chfile.setAcceptAllFileFilterUsed(false);
        chfile.setDialogTitle("SELECT INPUT FILE");
        
        FileNameExtensionFilter ext=new FileNameExtensionFilter(".txt FILES ONLY","txt");
        chfile.addChoosableFileFilter(ext);
        chfile.showOpenDialog(null);
        String path=chfile.getSelectedFile().getAbsolutePath();
        if(path==null){
            JOptionPane.showMessageDialog(null, "PATH NOT FOUND");
            return;
        }
        File fileinp=new File(path);
        try {
            PrintStream print=new PrintStream(fileinp);
            PrintStream cons=System.out;
            System.setOut(print);
            LinkedList<Edge> ll =new LinkedList<>();
            for(Edge ed:edg.values())
            {
                ll.add(ed);
            }
            ll.sort(new SortbyFrom());
            ll.sort(new SortbyTo());
            System.out.println(vert.size());
            for(String vname:vert.keySet())
            {
                System.out.println(vname+" "+vert.get(vname).x+" "+vert.get(vname).y);
            }      
            System.out.println(ll.size());
            for(int i=0;i<ll.size();i++)
            {
                System.out.println(ll.get(i).from.name+" "+ll.get(i).to.name+" "+ll.get(i).weight);
            }
            System.setOut(cons);
        } catch (IOException ex) {
            Logger.getLogger(Graph_Out.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally
        {
            
        }
    }//GEN-LAST:event_exportFileActionPerformed

    private void PathFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PathFromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PathFromActionPerformed

    private void PathToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PathToActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PathToActionPerformed
    ArrayList<Edge> edpath=new ArrayList<>(); 
    private void pathFinderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pathFinderActionPerformed
        // TODO add your handling code here:
        String source=PathFrom.getText();
        String dest=PathTo.getText();
        try{
            if(!(vert.containsKey(source)&&vert.containsKey(dest)))
            throw new NullPointerException();
        }
        catch(NullPointerException e)
        {
            JOptionPane.showMessageDialog(null, "NO SUCH VERTEX");
            return;
        }
        String s=map.path(source, dest);
        try{
            if(s==null)
            throw new NullPointerException();
        }
        catch(NullPointerException e)
        {
            JOptionPane.showMessageDialog(null, "NO SUCH VERTEX");
            return;
        }
        {
            PathOutput.setText(s);
            PathFrom.setText("");
            PathTo.setText("");
        }
    }//GEN-LAST:event_pathFinderActionPerformed
    public int getMin(int ar[],boolean status[])
        { 
           int min=Integer.MAX_VALUE;
           int mini=0;
           for(int i=0;i<ar.length;i++)
           {
               if(min>ar[i]&&!status[i]){min=ar[i];mini=i;}
           }
           if(!status[mini])
           return mini;
           else
           return -1;
        }
    private void vModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vModeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vModeActionPerformed

    private void eModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eModeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eModeActionPerformed
    Polygon []Poly;
    public void paint(Graphics g)
    {
        g.clearRect(0, 350,1600 , 600);
        if(drag&&P!=null&&search!=null&&eMode.isSelected())
        {
            g.setColor(Color.black);
            g.drawLine(prex, prey, finx, finy);
        }
        if(selected)
        {
            g.setColor(Color.black);
            g.drawOval(search.x*10,search.y*10+350,30,30);
        }
        int i=0;
        Poly=new Polygon[edg.values().size()];
        for(Edge e:edg.values())
        {
            g.setColor(Color.black);
            int[] px={e.from.x*10+15-2,e.from.x*10+15+2,e.to.x*10+15+2,e.to.x*10+15-2};
            int[] py={e.from.y*10 +350+15-2,e.from.y*10 +350+15+2,e.to.y*10+15+2+350,e.to.y*10+15-2+350};
            Poly[i]=new Polygon(px, py, 4);
            g.drawPolygon(Poly[i]);
            g.setColor(Color.BLACK);
            Line2D L=new Line2D.Double(e.from.x*10+15, e.from.y*10 +350+15, e.to.x*10+15, e.to.y*10+350+15);
//            Graphics2D g2=(Graphics2D)g;
            g.drawLine(e.from.x*10+15, e.from.y*10 +350+15, e.to.x*10+15, e.to.y*10+350+15);
            i++;
        }
        if(edpath!=null)
        {
            for(Edge e:edpath)
            {
                Line2D L=new Line2D.Double(e.from.x*10+15, e.from.y*10 +350+15, e.to.x*10+15, e.to.y*10+350+15);
                Graphics2D g2=(Graphics2D)g;
                g2.setColor(Color.green);
                g2.setStroke(new BasicStroke(4));
                g2.draw(L);
            }
//            while(animate.)
            //edpath=null;
        }
        for(Vertex v:vert.values())
        {
            g.setColor(Color.cyan);
            g.fillOval(v.x*10, v.y*10+350, 30, 30);
            g.setColor(Color.BLACK);
            g.drawString(v.name, v.x*10+8, v.y*10+367);
        }
        
        if(t.isRunning())
        {
                Graphics2D g2=(Graphics2D)g;
                g2.setColor(Color.yellow);
                g2.draw(new Ellipse2D.Double(ax*10, ay*10+350, 30, 30));
        }
      //  System.out.print(v[0].name+" "+v[1].name);
      //  g.setColor(new Color(245,246,247));
      //  g.drawLine(ed.from.x*10 +8, ed.from.y*10 +367, ed.to.x*10, ed.to.y*10+367);
    }
    class SortbyFrom implements Comparator<Edge>
    {
        public int compare(Edge a, Edge b) {
            int comp=a.from.name.compareTo(b.from.name);
            return comp;
        }
    }
    class SortbyTo implements Comparator<Edge>
    {
        public int compare(Edge a, Edge b) {
            int comp=a.to.name.compareTo(b.to.name);
            return comp;
        }
    }
    boolean drag,selected;
    int mode=0;
    @Override
    public void mouseClicked(MouseEvent me)
    {
        if(me.getY()>350&&vMode.isSelected())
        {
            int x=me.getX()/10;
            int y=(me.getY()-350)/10;
            if(search==null)//ADDING NEW VERTEX
            {
                String name=JOptionPane.showInputDialog(this,"ENTER VERTEX NAME");
                try{
            if(name==null)
            throw new NullPointerException();
        }
        catch(NullPointerException e)
        {
            JOptionPane.showMessageDialog(null, "NO SUCH VERTEX");
            return;
        }
                Vertex v=new Vertex(x,y,me.getX(),me.getY(),name);
                map.addVertex(v);
                JOptionPane.showMessageDialog(this,name+" VERTEX ADDED");
                repaint();
            }
            if(search!=null)
            {
                if(selected&&JOptionPane.showConfirmDialog(this,"DO YOU WANT TO DELETE IT")==0)
                {
                    map.deleteVertex(search.name);
                    search=null;
                    selected=false;
                    repaint();
                    return;
                }
                selected=true;
                repaint();
            }
        }
        if(me.getX()>350&&eMode.isSelected())
        {
            int delf=0;
            Polygon delp;
            int i=0;
            for( Polygon p: Poly)
            {
                if(p.contains(me.getX(),me.getY()))
                {
                    delf=1;
                    delp=p;
                    break;
                }
                i++;
            }
            if(delf==1)
            {
                int a;
                Object[] option={"MODIFY EDGE","DELETE EDGE","CANCEL"};
                a=JOptionPane.showOptionDialog(this, "WHAT DO YOU WANT TO DO WITH VERTEX","s", JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE, null, option, option[0]);
                if(a==1)
                {
                    int c=0;
                    for(Edge p: edg.values())
                    {
                        if(c==i)
                        {
                            map.deleteEdge(p.name);
                            repaint();
                            break;
                        }
                        c++;
                    }
                }
                if(a==0)
                {
                    int c=0;
                    for(Edge p: edg.values())
                    {
                        if(c==i)
                        {
                            String s=null;
                            while(s==null)
                            {
                                s=JOptionPane.showInputDialog("ENTER NEW WEOGHT");
                            }
                            p.weight= Integer.parseInt(s);
                            repaint();
                            break;
                        }
                        c++;
                    }
                }
            }
            else
            {
                JOptionPane.showMessageDialog(this, "NO EDGE");
                repaint();
                return;
            }
        }
    }

//    @Override
    int prex,prey;
    Point P=null;
    public void mousePressed(MouseEvent me) 
    {
        if(t.isRunning())
        {
           int a=JOptionPane.showConfirmDialog(null, "DO YOU WANT TO STOP THE ANIMATION");
           if(a==0)
               t.stop();
           repaint();
           edpath=null;
           return;
        }
        if(!(eMode.isSelected()||vMode.isSelected()))
        {
            JOptionPane.showMessageDialog(this, "SELECT MODE");
            return;
        }
        drag=false;
        P=me.getPoint();
        prex=me.getX();
        prey=me.getY();
        for(Vertex v:vert.values())
        {
            if((Math.abs(prex/10-v.x)<3)&&(Math.abs((prey-350)/10-v.y)<3))
            {
                search=v;
                repaint();
                return;
            }
        }
        search=null;
        selected=false;
    }
    
    @Override
    public void mouseReleased(MouseEvent me)
    {
       if(drag)
       {
            drag=false;
            selected=false;
            if(search==null)
            {
                JOptionPane.showMessageDialog(this, "NO VERTEX TO BEGIN");
                repaint();
                return;
            }
            //vMode.setSelected(false);
            //eMode.setSelected(false);
            prex=me.getX()/10;
            prey=(me.getY()-350)/10;
            int flag=0;
            Vertex to=null;
            for(Vertex v:vert.values())
            {
                if((Math.abs(prex-v.x)<2)&&(Math.abs((prey-(v.y)))<2))
                {
                    to=v;
                    flag=1;
                    break;
                }
            }
            //System.out.print(vMode.isSelected());
            if(vMode.isSelected())
            {
                //System.out.print("vMode");
                if(flag==0)
                {
                    search.x=prex;
                    search.y=prey;
                    search=null;
                    repaint();
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "ALREDY A VERTEX");
                    repaint();
                    return;
                }
                vMode.setSelected(false);
            }
            if(eMode.isSelected())
            {
                if(flag==0)
                {
                    JOptionPane.showMessageDialog(this, "NO VERTEX TO END");
                    repaint();
                    return;
                }
                else
                {
                    eMode.setSelected(false);
                    String name=JOptionPane.showInputDialog("ENTER EDGE NAME");
                    int weight=Integer.parseInt(JOptionPane.showInputDialog("ENTER EDGE WEIGHT")); 
                    map.addEdge(search.name,to.name, name, weight);
                }
                repaint();
            }
       }
    }

    @Override
    public void mouseEntered(MouseEvent me) {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseExited(MouseEvent me) {
     //   throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    int finx,finy;
    int countdrag;
    @Override
    public void mouseDragged(MouseEvent me) 
    {
        if(search==null)
        {
            JOptionPane.showMessageDialog(this, "NO VERTEX OR EDGE");
            return;
        }
        selected=false;
        repaint();
        if(eMode.isSelected())
        {
            drag=true;
            finx=me.getX();
            finy=me.getY();
                //System.out.print("EDGE");
            repaint();
            return;
        }
        if(vMode.isSelected())
        {
            drag=true;
            finx=me.getX();
            finy=me.getY();
            repaint();
            return;
        }
        //Graphics g=this.getGraphics();
        //g.setColor(Color.BLACK);
        //g.drawLine(prex, prey, me.getX(), me.getY());
    }

    @Override
    public void mouseMoved(MouseEvent me) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    double ax,ay;
    double ax2,ay2,ax1,ay1;
    double m,c;
    int edi=0;
    @Override
    public void actionPerformed(ActionEvent ae)
    {
        if(ax<Double.max(ax1,ax2))
        {
            if(ax!=ax1||ay==ay1)
        {
            m=((ay2-ay1)*1.0)/(ax2-ax1);
            c=((ay1*ax2-ax1*ay2)*1.0)/(ax2-ax1);
            if(ax2>ax1)
                ax++;
            if(ax2<ax1)
                ax--;
            ay=ax*m+c;
            repaint();
            return;
        }
        if(ax==ax1&&ay!=ay1)
        {
           if(ay1>ay)
               ay++;
           if(ay1<ay)
               ay--;
           repaint();
           return;
        }
        }
        else
        {
            edi++;
            edi=edi%edpath.size();
            ax1=edpath.get(edi).from.x;ay1=edpath.get(edi).from.y;
            ax2=edpath.get(edi).to.x;ay2=edpath.get(edi).to.y;
            ax=ax1;
            ay=ay1;
            System.out.println(edi);
            repaint();
        }
    }
    class Vertex
    {
        int x;
        int y;
        int showx;
        int showy;
        String name;
        Vertex(int x,int y,int shx,int shy,String name)
        {
            this.x=x;
            this.y=y;
            this.showx=shx;
            this.showy=shy;
            this.name=name;
        }
    }
    class Edge
    {
        Vertex to,from;
        String name;
        int weight;
        Edge(Vertex from,Vertex to,String name,int weight)
        {
            this.from=from;
            this.to=to;
            this.name=name;
            this.weight=weight;
        }
    }
    class Graph
    {
        HashMap<Vertex,LinkedList<Edge>> maping=new HashMap();
        public void addVertex(Vertex v)
        {
            LinkedList<Edge> list=new LinkedList<Edge>();
            maping.put(v,list);
            vert.put(v.name,v);
        }
        public Vertex searchVertex(String name)
        {
            Vertex v=vert.get(name);
            return v;
        }
        public LinkedList<Edge> deleteVertex(String name)
        {
            Vertex v=vert.get(name);
            LinkedList<Edge> list=new LinkedList<Edge>();
            list=maping.get(v);
            LinkedList<Edge> edlist=new LinkedList<Edge>();
            Iterator<Edge> it = list.iterator();
            for(Edge e:edg.values())
            {
                if(e.to.name.compareTo(name)==0)
                    edlist.add(deleteEdge(e.name));
            }
            while(it.hasNext())
                    edlist.add(deleteEdge(it.next().name));
            maping.remove(v);
            vert.remove(name);
            //System.out.println(map.size());
            return edlist;
        }
        public void addEdge(String from,String to,String name,int weight)
        {
            Vertex start=vert.get(from);
            Vertex end=vert.get(to);
            LinkedList<Edge> list =new LinkedList<Edge>();
            list=maping.get(start);
            Edge edge=new Edge(start,end,name,weight);
            list.add(edge);
            edg.put(edge.name,edge);
            maping.put(start,list);
        }

        private Edge searchEdge(String name)
        {
            Edge e=edg.get(name);
            return e;
        }
        private Edge deleteEdge(String name)
        {
            Edge ed=edg.remove(name);
            if(ed!=null)
            maping.get(ed.from).remove(ed.to);
            //System.out.println(edg.size());
            return ed;
        }
        public String path(String source,String dest)
        {
            int n1=vert.values().size();
            int n=vert.values().size();
            edpath=new ArrayList<>();
            boolean []status=new boolean[n];
            String s=null;
            int[] a=new int[n];
            HashMap<String,Integer>si=new HashMap<>();
            HashMap<Integer,String>is=new HashMap<>();
            int i=0;
            String[] pare=new String[n];
            for(Vertex v:vert.values())
            {
                si.put(v.name,i);
                is.put(i,v.name);
                i++;
            }
            for(i=0;i<n;i++){a[i]=Integer.MAX_VALUE;}
            a[si.get(source)]=0;
            while(n!=1)
            {
                i=getMin(a,status);
                if(i==-1)
                {
                    
                    return s;
                }
                status[i]=true;
                LinkedList<Edge> e=map.maping.get(vert.get(is.get(i)));
                for(Edge ed:e)
                {
                    if((a[si.get(ed.to.name)]>(a[i]+ed.weight))&&!status[si.get(ed.to.name)])
                    {
                        pare[si.get(ed.to.name)]=is.get(i);
                        a[si.get(ed.to.name)]=a[i]+ed.weight;
                    }
                    System.out.print(i+" ");
                    for(int j=0;j<n1;j++)
                    System.out.print(a[j]+" ");
                    for(int j=0;j<n1;j++)
                    System.out.print(pare[j]+" ");
                    System.out.println();
                }  
                n--;
            }
            for(i=0;i<n1;i++)//
            System.out.println(a[i]);
            s=pare[si.get(dest)];
            String to=s;
            String path=s;
            for(Edge ed:maping.get(vert.get(s)))
                {
                    if(ed.to.name.compareTo(dest)==0)
                    {
                        edpath.add(ed);
                        break;
                    }
                }
            String from=null;
            while(true)
            {
                System.out.println(s);
                if(s.compareToIgnoreCase(source)==0)
                    break;
                s=pare[si.get(s)];
                Edge put=null;
                from=s;
                for(Edge ed:maping.get(vert.get(from)))
                {
                    if(ed.to.name.compareTo(to)==0)
                    {
                        put=ed;
                        break;
                    }
                }
                edpath.add(put);
                to=s;
                path=s+"-->"+path;
            }
            path=path+"-->"+dest;
            repaint();
            Collections.reverse(edpath);
            edi=0;
            ax1=edpath.get(edi).from.x;ay1=edpath.get(edi).from.y;
            ax2=edpath.get(edi).to.x;ay2=edpath.get(edi).to.y;
            ax=ax1;ay=ay1;
            t.start();
            return path;
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Graph_Out.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Graph_Out.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Graph_Out.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Graph_Out.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Graph_Out().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel EdgePanel;
    private javax.swing.JPanel FunctonPanel;
    private javax.swing.JLabel MODE;
    private javax.swing.JTextField PathFrom;
    private javax.swing.JTextField PathOutput;
    private javax.swing.JTextField PathTo;
    private javax.swing.JButton Refresh;
    private javax.swing.JPanel VertexPanel;
    private javax.swing.JButton addEdge;
    private javax.swing.JButton addVertex;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton deleteEdge;
    private javax.swing.JButton deleteVertex;
    private javax.swing.JRadioButton eMode;
    private javax.swing.JLabel edge_label1;
    private javax.swing.JButton exportFile;
    private javax.swing.JLabel from_label;
    private javax.swing.JLabel from_label1;
    private javax.swing.JLabel from_label2;
    private javax.swing.JTextField from_textAddEdge;
    private javax.swing.JTextField from_textDeleteEdge1;
    private javax.swing.JTextField from_textSearchEdge;
    private javax.swing.JButton importFileSystem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JButton modifyEdge;
    private javax.swing.JButton modifyVertex;
    private javax.swing.JLabel name_label;
    private javax.swing.JLabel name_label1;
    private javax.swing.JLabel name_label2;
    private javax.swing.JLabel name_label3;
    private javax.swing.JLabel name_label4;
    private javax.swing.JLabel name_label5;
    private javax.swing.JLabel name_label6;
    private javax.swing.JLabel name_label7;
    private javax.swing.JTextField name_text_AddEdge;
    private javax.swing.JTextField name_text_DeleteEdge;
    private javax.swing.JTextField name_text_ModifyEdge;
    private javax.swing.JTextField name_text_SearchEdge;
    private javax.swing.JTextField name_text_SearchVertex;
    private javax.swing.JTextField name_text_addVertex;
    private javax.swing.JTextField name_text_deleteVertex;
    private javax.swing.JTextField name_text_modifyVertex;
    private javax.swing.JButton pathFinder;
    private javax.swing.JButton searchEdge;
    private javax.swing.JButton searchVertex;
    private javax.swing.JLabel to_label;
    private javax.swing.JLabel to_label1;
    private javax.swing.JLabel to_label2;
    private javax.swing.JTextField to_textAddEdge;
    private javax.swing.JTextField to_textDeleteEdge;
    private javax.swing.JTextField to_textSearchEdge;
    private javax.swing.JRadioButton vMode;
    private javax.swing.JLabel vertex_label1;
    private javax.swing.JLabel weight_label;
    private javax.swing.JLabel weight_label1;
    private javax.swing.JLabel weight_label2;
    private javax.swing.JLabel weight_label3;
    private javax.swing.JTextField weigth_textAddEdge;
    private javax.swing.JTextField weigth_textDeleteEdge;
    private javax.swing.JTextField weigth_textModifyEdge;
    private javax.swing.JTextField weigth_textSearchEdge;
    private javax.swing.JLabel x_label;
    private javax.swing.JLabel x_label1;
    private javax.swing.JLabel x_label2;
    private javax.swing.JLabel x_label7;
    private javax.swing.JTextField x_textAddVertex;
    private javax.swing.JTextField x_textDeleteVertex;
    private javax.swing.JTextField x_textModifyVertex;
    private javax.swing.JTextField x_textSearchVertex;
    private javax.swing.JLabel y_label;
    private javax.swing.JLabel y_label1;
    private javax.swing.JLabel y_label2;
    private javax.swing.JLabel y_label7;
    private javax.swing.JTextField y_textAddVertex;
    private javax.swing.JTextField y_textDeleteVertex;
    private javax.swing.JTextField y_textModifyVertex;
    private javax.swing.JTextField y_textSearchVertex;
    // End of variables declaration//GEN-END:variables
}
